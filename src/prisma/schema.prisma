generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model customer {
  customer_id           BigInt          @id @default(autoincrement())
  first_name            String?         @db.VarChar(255)
  last_name             String?         @db.VarChar(255)
  client_address        String?         @db.VarChar(255)
  date_added            DateTime?       @db.Timestamptz(6)
  status                customer_status @default(active)
  customerHasMany_order order[]
}

model order {
  order_id    BigInt   @id @default(autoincrement())
  customer_id BigInt
  order_date  DateTime @db.Timestamptz(6)

  customerHasMany_order      customer        @relation(fields: [customer_id], references: [customer_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_order.customer_id")
  orderHasMany_order_product order_product[]
}

model order_product {
  id            BigInt   @id @default(autoincrement())
  order_id      BigInt
  product_id    BigInt
  quantity      BigInt
  product_cost  Decimal? @db.Decimal
  product_price Decimal? @db.Decimal
  discount      Decimal? @db.Decimal

  orderHasMany_order_product   order   @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_order_product.order_id")
  productHasMany_order_product product @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_order_product.product_id")
}

model product {
  product_id       BigInt          @id @default(autoincrement())
  // sku              String          @unique @db.VarChar(255)
  product_name     String          @db.VarChar(255)
  product_category BigInt
  product_cost     Decimal?        @db.Decimal
  product_price    Decimal?        @db.Decimal
  product_stock    BigInt          @default(0)
  status           product_status? @default(active)

  productHasMany_order_product order_product[]
  categoryHasMany_product      product_category @relation(fields: [product_category], references: [category_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_product.category_id")
}

model product_category {
  category_id   BigInt @id @default(autoincrement())
  category_name String @db.VarChar(255)

  categoryHasMany_product product[]
}

model user {
  user_id   BigInt      @id @default(autoincrement())
  username  String      @db.VarChar(255)
  password  String      @db.VarChar(255)
  user_type user_types? @default(secretary)
}

enum user_types {
  administrator
  secretary
}

enum customer_status {
  active
  inactive
}

enum product_status {
  active
  inactive
}
